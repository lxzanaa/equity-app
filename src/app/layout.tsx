import type { Metadata } from "next"
import localFont from "next/font/local"
import "./globals.scss"
import clsx from "clsx"

const geistSans = localFont({
    src: "../../public/fonts/Lausanne.ttf",
    variable: "--font-geist-sans",
    weight: "100 900",
})
const geistMono = localFont({
    src: "../../public/fonts/Lausanne.ttf",
    variable: "--font-geist-mono",
    weight: "100 900",
})

const twkLausanne = localFont({
    src: [
        {
            path: "../../public/fonts/twk-lausanne/TWKLausanne-100.woff2",
            weight: "100",
            style: "normal",
        },
        {
            path: "../../public/fonts/twk-lausanne/TWKLausanne-200.woff2",
            weight: "200",
            style: "normal",
        },
        {
            path: "../../public/fonts/twk-lausanne/TWKLausanne-300.woff2",
            weight: "300",
            style: "normal",
        },
        {
            path: "../../public/fonts/twk-lausanne/TWKLausanne-400.woff2",
            weight: "400",
            style: "normal",
        },
        {
            path: "../../public/fonts/twk-lausanne/TWKLausanne-500.woff2",
            weight: "500",
            style: "normal",
        },
        {
            path: "../../public/fonts/twk-lausanne/TWKLausanne-600.woff2",
            weight: "600",
            style: "normal",
        },
        {
            path: "../../public/fonts/twk-lausanne/TWKLausanne-700.woff2",
            weight: "700",
            style: "normal",
        },
        {
            path: "../../public/fonts/twk-lausanne/TWKLausanne-800.woff2",
            weight: "800",
            style: "normal",
        },
        {
            path: "../../public/fonts/twk-lausanne/TWKLausanne-900.woff2",
            weight: "900",
            style: "normal",
        },
    ],
})

export const metadata: Metadata = {
    title: "Create Next App",
    description: "Generated by create next app",
}

const fonts = [twkLausanne, geistSans, geistMono]

export default function RootLayout({
    children,
}: Readonly<{
    children: React.ReactNode
}>) {
    return (
        <html lang="en">
            <body className={clsx(fonts.map((font) => font.className))}>{children}</body>
        </html>
    )
}
